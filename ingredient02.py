# -*- coding: utf-8 -*-
"""ingredient02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PsGyXHs4dV3CDda3c25SyibgQoFmXRTx
"""

import tkinter as tk
from tkinter import ttk
from PIL import Image, ImageTk
import requests
from io import BytesIO
import os

class SalmonSaladApp(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Salmon Salad Recipe App")
        self.geometry("400x700")
        self.configure(bg="#222222")

        self.create_widgets()

    def create_widgets(self):
        # Header frame with image
        self.header_frame = tk.Frame(self, bg="#222222", height=300)
        self.header_frame.pack(fill=tk.X)

        # Load image - either from URL or use a placeholder
        try:
            # Try to load image from file if it exists
            if os.path.exists("salmon_salad.jpg"):
                img = Image.open("salmon_salad.jpg")
            else:
                # Use a placeholder image URL
                response = requests.get("https://placeholder.com/400x300")
                img = Image.open(BytesIO(response.content))

            img = img.resize((400, 300), Image.LANCZOS)
            self.photo = ImageTk.PhotoImage(img)
            self.img_label = tk.Label(self.header_frame, image=self.photo, bg="#222222")
            self.img_label.pack(fill=tk.BOTH)

            # Add overlay text
            self.title_frame = tk.Frame(self.header_frame, bg="#222222")
            self.title_frame.place(relx=0.1, rely=0.7, relwidth=0.8, relheight=0.2)

            self.recipe_title = tk.Label(self.title_frame, text="Salmon with\nfresh salad",
                                        font=("Arial", 24, "bold"), fg="white", bg="#222222",
                                        justify=tk.LEFT, anchor="w")
            self.recipe_title.pack(side=tk.LEFT, padx=5)

        except Exception as e:
            print(f"Error loading image: {e}")
            self.img_label = tk.Label(self.header_frame, text="[Image: Salmon Salad]",
                                     bg="#333333", fg="white", height=15)
            self.img_label.pack(fill=tk.BOTH)

        # Info bar with time and calories
        self.info_frame = tk.Frame(self.header_frame, bg="#222222")
        self.info_frame.place(relx=0.1, rely=0.9, relwidth=0.8, relheight=0.1)

        time_frame = tk.Frame(self.info_frame, bg="white", bd=0, highlightthickness=0)
        time_frame.pack(side=tk.LEFT, padx=5)
        time_frame.configure(borderwidth=15, relief="flat", bg="#3D3D3D")

        time_icon = tk.Label(time_frame, text="‚è±Ô∏è", bg="#3D3D3D", fg="white")
        time_icon.pack(side=tk.LEFT, padx=2)
        time_label = tk.Label(time_frame, text="15-20 mins", bg="#3D3D3D", fg="white")
        time_label.pack(side=tk.LEFT, padx=2)

        calories_frame = tk.Frame(self.info_frame, bg="white", bd=0, highlightthickness=0)
        calories_frame.pack(side=tk.LEFT, padx=10)
        calories_frame.configure(borderwidth=15, relief="flat", bg="#3D3D3D")

        calories_icon = tk.Label(calories_frame, text="üî•", bg="#3D3D3D", fg="white")
        calories_icon.pack(side=tk.LEFT, padx=2)
        calories_label = tk.Label(calories_frame, text="325 cal", bg="#3D3D3D", fg="white")
        calories_label.pack(side=tk.LEFT, padx=2)

        # Tab navigation
        self.tabs_frame = tk.Frame(self, bg="white")
        self.tabs_frame.pack(fill=tk.X)

        self.notebook = ttk.Notebook(self.tabs_frame)
        self.notebook.pack(fill=tk.BOTH, expand=True)

        # Style for the tabs
        style = ttk.Style()
        style.configure("TNotebook", background="white", borderwidth=0)
        style.configure("TNotebook.Tab", padding=[20, 10], font=("Arial", 12))

        # Ingredients tab
        self.ingredients_tab = tk.Frame(self.notebook, bg="white")
        self.notebook.add(self.ingredients_tab, text="INGREDIENTS")

        # Ingredients list
        ingredients = [
            ("Avocado", "1", True),
            ("Eggs", "2", True),
            ("Rice", "50g", False),
            ("Lettuce", "50g", False),
            ("Lightly salted salmon", "100g", True),
            ("Microgreens", "10g", False),
            ("Tomatoes", "1", True)
        ]

        for i, (name, amount, in_stock) in enumerate(ingredients):
            frame = tk.Frame(self.ingredients_tab, bg="white", height=50)
            frame.pack(fill=tk.X, padx=10)

            name_label = tk.Label(frame, text=name, font=("Arial", 14), bg="white", anchor="w")
            name_label.pack(side=tk.LEFT, pady=10)

            amount_label = tk.Label(frame, text=amount, font=("Arial", 14), bg="white")
            amount_label.pack(side=tk.RIGHT, padx=20, pady=10)

            if in_stock:
                status_label = tk.Label(frame, text="‚úì", font=("Arial", 14), fg="green", bg="white")
            else:
                status_label = tk.Label(frame, text="üõí", font=("Arial", 14), fg="gray", bg="white")
            status_label.pack(side=tk.RIGHT, padx=5, pady=10)

            if i < len(ingredients) - 1:
                separator = ttk.Separator(self.ingredients_tab, orient="horizontal")
                separator.pack(fill=tk.X, padx=10)

        # How to cook tab
        self.cook_tab = tk.Frame(self.notebook, bg="white")
        self.notebook.add(self.cook_tab, text="HOW TO COOK")

        # Steps
        steps = [
            ("Step 1", "Preheat oven to 400¬∞F. Line a small rimmed baking sheet with foil. Place salmon on the prepared pan. Drizzle with oil; season with salt. Bake until the salmon flakes easily with a fork, 8 to 10 minutes."),
            ("Step 2", "Meanwhile, combine rice and water in a small saucepan; cook according to package directions. Mix mayonnaise and Sriracha in a small bowl; set aside. Whisk tamari, mirin, ginger, crushed red pepper and salt in another small bowl; set aside."),
            ("Step 3", "Divide the rice between 2 bowls. Top with salmon, avocado, cucumber and kimchi. Drizzle with the tamari mixture and the mayonnaise mixture. Mix the bowls, if desired, and serve with nori.")
        ]

        for step_num, (step_title, step_text) in enumerate(steps):
            step_frame = tk.Frame(self.cook_tab, bg="white", pady=10)
            step_frame.pack(fill=tk.X, padx=20, anchor="w")

            title = tk.Label(step_frame, text=step_title, font=("Arial", 14, "bold"),
                             fg="#FF6347", bg="white", anchor="w")
            title.pack(fill=tk.X, anchor="w")

            text = tk.Label(step_frame, text=step_text, font=("Arial", 12), bg="white",
                           wraplength=350, justify=tk.LEFT, anchor="w")
            text.pack(fill=tk.X, pady=5, anchor="w")

        # Footer button
        self.footer = tk.Frame(self, bg="white", height=60)
        self.footer.pack(fill=tk.X, side=tk.BOTTOM)

        button_style = {"bg": "#FF6347", "fg": "white", "font": ("Arial", 14, "bold"),
                       "activebackground": "#E55B3C", "activeforeground": "white",
                       "relief": tk.FLAT, "bd": 0}

        self.enjoy_button = tk.Button(self.footer, text="Enjoy your meal üç¥", **button_style,
                                     padx=20, pady=10)
        self.enjoy_button.pack(pady=10)

if __name__ == "__main__":
    app = SalmonSaladApp()
    app.mainloop()